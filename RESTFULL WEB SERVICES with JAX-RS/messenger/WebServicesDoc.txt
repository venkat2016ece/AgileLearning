HTTP METHODS
=============

GET 

POST

PUT

DELETE

.Resource based URIs
.HTTP methods
.HTTP Status codes
.Messege headers

.Resource based URIs
======================
Two types of resource URIs
	.Instance rresource URIs
	.Collection resource URIs

Query parameters for paginataions and filtering collectionURIs


FirstLevel
===========
 /profles/{profileName}
 /messeges/{messegeId]} 
 
 SecondLevel
 ============
 /messeges/{messegeId}/comments/{commentId}
 /messeges/{messegeId}/likes/{likes}
 /messeges/{messegeId}/shares/{shareId}  
 
  
  HTTP Methods
  ============
 .common methods
  	GET 
  	POST
  	PUT
  	DELETE
 .A bit uncommon
 	HEAD
 	OPTIONS
 	
Collection URIs scenarios
==========================
 GET->  /messeges
 
 gets*all*messeges
 
 
 DELETE->/messeges/10/comments
 
 delete*all*comments of messeges 10
 
 
 GET->/messeges/10/comments
 
 gets*all*comments of messege 10
 
 
 POST-> /messeges/10/comments
 
 creates a new comment for messege 10
 
 
 PUT-> /messeges/20/commments
 
 replaces*all*comments for messege 20 with a new list
 
 
 =====================================================
 
 PUT vs POST
 
 The method GET is Read only method.gets something from the server
 
 
 
 where POST,PUT,DELETE  are write methods 
 
 
 -----------------------------------------
 it is safe to make multiple duplicate GET requests.
 
 how about PUT,POST,DELETE?
 
 
 
 GET  PUT DELETE safely repeatble methods 
 
 
 where POST can not repeatable safely(every req method create something new)
 
 
 GTE,PUT,DELETE are IDEMPOTENT methods.
 
POST is NON-IDEMPOTENT method.

(IDEMPOTENT is a the property of certain opertaions in mathemetics and computer science,
that can be applied multipule times  without chaging the result beyond the intial appllication.)



  
 Status Codes
 ============
 
 1XX  	Informational 
 2xx   	Success
 3xx 	Redirection
 4xx  	Client error code
 5xx   	Server Error
 
 
 HATEOAS
 =======
 Hypermedia
 As
 Engine
 Of
 Application
 State
 
 
  Rechardsom meturity model
  ==========================
  .level 0
  ----------
  	> One Uri 
  	> Request Body Contains all the details
  	
  This is often called SwampofPOX(plain old xml)
 
 .level 1 (Resource URI)
 -----------------------
 	>Individual URIs for each resource
 
 level 2(HTTP Methods)
 ----------------------
 Uses the right HTTP methods,Status codes.
 
 level 3(HATEOAS)
 ----------------
 Response have links that clients can use
 
 
 
 Why Jersey?
 ============
 "Reference implementation" for the JAX-RS Specification.






had doubt in 19 video
=======================cheack it once



